<%
	record  ||= nil
	options ||= Hash.new
	options[:edit] 		= true if options[:edit].nil?
	options[:delete] 	= true if options[:delete].nil?
	options[:user] 		= true if options[:user].nil?
	options[:byline]	= true if options[:byline].nil?
	options[:approval] 	= true if options[:approval].nil?
	options[:public] 	= true if options[:public].nil?	
	options[:date] 		= false if options[:date].nil?
		
	# Narrow menu options based on user's permissions 
	options[:approval]  = options[:approval] && record.respond_to?(:is_approved?) && record.can?(@logged_in_user, :approve) 
	options[:public]  	= options[:public] && record.respond_to?(:is_public?) && record.can?(@logged_in_user, :edit)
	options[:user]		= options[:user] && record.respond_to?(:user_id) && !record.user_id.blank? ? (record.respond_to?(:record) ? (!record.record.nil? ? !record.record.is_user_owner?(record.user) : false) : false) : false
	options[:edit] 		= options[:edit] && record.can?(@logged_in_user, :edit)
	options[:delete]	= options[:delete] && record.can?(@logged_in_user, :edit)	
%>
<%= content_tag(:div, :class => :record_menu) do %>
	<table style="width:100%" cellpadding="0" cellspacing="0">
		<tr>
			<td class="left">
				<%= content_tag(:ul, :class => "record_menu left record_menu_left") do %>
					<%= yield :record_menu_left %>	 
					<%
						# Empty content_for content in case of loop
						@view_flow.content.delete(:record_menu_left) 
					%>					
					
					<% if options[:date] %>						
						<%= content_tag(:li, content_tag(:span, friendly_date(record.created_at))) %>
					<% end %>
					
					<% if options[:user] %>
						<%= content_tag :li do %>		
							<%= content_tag :span do %>									
								<%= options[:byline] ? I18n.t("single.by").downcase : nil %>
								<%= link_to_user(record.user, :avatar => true, :name => options[:byline]) %>
							<% end %>
						<% end %>
					<% end %>

					<% if options[:public] %>
						<%= content_tag :li do %>
							<%= content_tag :span do %>									
								<%= record.is_public? ? icon("public", t("single.public"), "icon help") + " #{t("single.public")}" : icon("private", "#{t("single.not")} #{t("single.public")}", "icon help") + " #{t("single.not")} #{t("single.public")}" %>
								<%#= icon("spacer") %> 		
								<%#= link_to icon("cycle", t("label.item_change", :item => t("single.approval"))), {:action => "change_approval", :id => record, :record_type => record.class.name, :record_id => record.id, :id => record, :controller => record.class.name.pluralize.underscore}, :confirm => t("confirm.general") %>
							<% end %>
						<% end %>
					<% end %>	
					
					<% if options[:approval] %>
						<%= content_tag :li do %>	
							<%= content_tag :span do %>																
								<%= record.is_approved? ? icon("approved", t("single.approved"), "icon help") + " #{t("single.approved")}" : icon("unapproved", "#{t("single.not")} #{t("single.approved")}", "icon help") + " #{t("single.not")} #{t("single.approved")}" %>
								<%#= icon("spacer") %> 		
								<%#= link_to icon("cycle", t("label.item_change", :item => t("single.approval"))), {:action => "change_approval", :id => record, :record_type => record.class.name, :record_id => record.id, :id => record, :controller => record.class.name.pluralize.underscore}, :confirm => t("confirm.general") %>
							<% end %>
						<% end %>
					<% end %>	
																		
				<% end %>								
			</td>
			<td class="right">
				<%= content_tag(:ul, :class => "record_menu right record_menu_right") do %>								
					<%# Intended order is backwards due to float:right %>
					<% if options[:delete] %>
					    <%= content_tag(:li, link_to(icon("delete") + " " + t("single.delete"), { :action => 'delete', :controller => record.class.name.pluralize.underscore, :record_id => record.id, :record_type => record.class.name, :id => record}, :confirm => t("confirm.item_delete", :item => record.class.model_name.human))) %>																
					<% end %>
					<% if options[:edit] %>
						<%= content_tag(:li, link_to(icon("edit") + " " + t("single.edit"), {:action => "edit", :controller => record.class.name.pluralize.underscore, :record_id => record.id, :record_type => record.class.name, :id => record})) %>
					<% end %>
					<%= yield :record_menu_right %>	 
					<%
						# Empty content_for content in case of loop
						@view_flow.content.delete(:record_menu_right) 
					%>												
				<% end %>				
			</td>
		</tr>
	</table>



<% end %>
